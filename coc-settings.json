{
  // suggestions
  // "suggest.echodocSupport": true,
  // TODO add more labels and give them cool glyphs
  "suggest.completionItemKindLabels": {
    "text": "t",
    "method": "m",
    "function": ""
  },

  // diagnostics
  "diagnostic.errorSign": " ",
  "diagnostic.warningSign": " ",
  "diagnostic.infoSign": "",
  "diagnostic.hintSign": " ",
  // "diagnostic.displayByAle": true,
  // "diagnostic.virtualText": true, // this won't work with codelens when error on same line

  // codelens TODO what does this get me?
  // "codeLens.enable": true,

  // list
  "list.indicator": ">",
  "list.selectedSignText": " ",

  // autoformat
  "coc.preferences.formatOnSaveFiletypes": [
    "css",
    "markdown",
    "javascript",
    "graphql",
    "html",
    "yaml",
    "json",
    "python",
    "java",
    "typescript",
    "javascriptreact",
    "typscriptreact",
    "rust"
  ],
  "coc.preferences.hoverTarget": "float",

  // explorer
  "explorer.width": 30,
  "explorer.icon.enableNerdfont": true,
  "explorer.previewAction.onHover": false,
  "explorer.icon.enableVimDevicons": false,
  "explorer.keyMappings": {
    "<cr>": ["expandable?", "expand", "open"],
    "v": "open:vsplit"
  },

  //coc-emoji
  "coc.source.emoji.filetypes": ["markdown"],

  // TODO b:coc_suggest_disable=1 GOYO

  "suggest.floatEnable": true,
  "signature.target": "float",
  "languageserver": {
    "kotlin": {
      "command": "kotlin-language-server",
      "filetypes": ["kotlin"]
    },
    "nix": {
      "command": "/home/leon/coding/projects/rnix-lsp/target/debug/rnix-lsp",
      "filetypes": ["nix"]
    },
    /* "haskell": { */
    /*   "command": "ghcide", */
    /*   "args": ["--lsp"], */
    /*   "rootPatterns": [".stack.yaml", ".hie-bios", "BUILD.bazel", "cabal.config", "package.yaml"], */
    /*   "filetypes": ["hs", "lhs", "haskell"] */
    /* }, */
  /* "haskell": { */
  /*   "command": "hie-wrapper", */
  /*   "args": ["--lsp"], */
  /*   "rootPatterns": [ */
  /*     "*.cabal", */
  /*     "stack.yaml", */
  /*     "cabal.project", */
  /*     "package.yaml" */
  /*   ], */
  /*   "filetypes": [ */
  /*     "hs", */
  /*     "lhs", */
  /*     "haskell" */
  /*   ], */
  /*   "initializationOptions": { */
  /*     "haskell": { */
  /*     } */
  /*   } */
  /* }, */
    /* "haskell": { */
    /*   "command": "/usr/bin/haskell-language-server-8.6.4", */
    /*   "args": ["--lsp"], */
    /*   "rootPatterns": ["*.cabal", "stack.yaml", "cabal.project", "package.yaml"], */
    /*   "filetypes": ["hs", "lhs", "haskell"], */
    /*   "initializationOptions": { */
    /*     "languageServerHaskell": { */
    /*       "formattingProvider": "brittany" */
    /*     } */
    /*   } */
    /* }, */
    "elmLS": {
      "command": "elm-language-server",
      "filetypes": ["elm"],
      "rootPatterns": ["elm.json"],
      "initializationOptions": {
        "elmAnalyseTrigger": "change"
      }
    },
    "dockerfile": {
      "command": "docker-langserver",
      "filetypes": ["dockerfile"],
      "args": ["--stdio"]
    },
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"],
      "ignoredRootPaths": ["~"]
    }
  },
  "codeLens.enable": true,
  "prettier.useTabs": false,
  "prettier.singleQuote": false,
  "prettier.trailingComma": "es5",
  "prettier.tabWidth": 2,
  "prettier.printWidth": 100,
  "prettier.semi": false,
  "python.jediEnabled": false,
  "python.autoComplete.extraPaths": ["plover"],
  "coc-actions.hideCursor": true
}
